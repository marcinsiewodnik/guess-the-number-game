package com.marcinsi.console;

import com.marcinsi.interface_layer.Game;
import com.marcinsi.interface_layer.MessageGenerator;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.event.ContextRefreshedEvent;
import org.springframework.context.event.EventListener;
import org.springframework.stereotype.Component;

import java.util.Scanner;

// This component wires up all the other components

@Slf4j
@Component
public class ConsoleNumberGuess {

    // == fields ==

    // log field is automatically generated by lombok

    private final Game game;
    private final MessageGenerator messageGenerator;

    // == constructors ==

    @Autowired
    public ConsoleNumberGuess(Game game, MessageGenerator messageGenerator) {
        this.game = game;
        this.messageGenerator = messageGenerator;
    }

    // == events ==

    // Observer pattern -> functionality that will be invoked after the whole context in initialized

    @EventListener (ContextRefreshedEvent.class)
    public void start() {

        log.info("start() --> Container ready for use");

        Scanner scanner = new Scanner(System.in);

        while(true){

            System.out.println(messageGenerator.getMainMessage());
            System.out.println(messageGenerator.getResultMessage());

            int guess = scanner.nextInt();
            scanner.nextLine();

            game.setGuess(guess);
            game.check();

            if(game.isGameWon() || game.isGameLost()){

                System.out.println(messageGenerator.getResultMessage());

                System.out.println("Play again y/n?");

                String playAgainString = scanner.nextLine().trim();

                if(!playAgainString.equalsIgnoreCase("y")){

                    break;
                }

                game.reset();
            }
        }
    }
}